#############################################################################
# Makefile for building: TowerDefense.app/Contents/MacOS/TowerDefense
# Generated by qmake (2.01a) (Qt 4.7.2) on: lun. mai 30 03:24:50 2011
# Project:  TowerDefense.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/local/Qt4.7/mkspecs/macx-g++ QMLJSDEBUGGER_PATH=/Applications/Qt\ Creator.app/Contents/Resources/qml/qmljsdebugger -o Makefile TowerDefense.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -gdwarf-2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -gdwarf-2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Qt4.7/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I. -I. -F/Library/Frameworks
LINK          = g++
LFLAGS        = -headerpad_max_install_names
LIBS          = $(SUBLIBS) -F/Library/Frameworks -L/Library/Frameworks -framework QtGui -framework QtCore 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		myscene.cpp \
		myview.cpp \
		mydockwidget.cpp \
		mycomputer.cpp \
		mybuilder.cpp \
		defense.cpp \
		pistolet_eau.cpp \
		mypushbutton.cpp \
		petanque.cpp \
		paintball.cpp \
		lance_pierre.cpp \
		musicien.cpp \
		insecte.cpp \
		fourmi.cpp \
		guepe.cpp \
		cafard.cpp \
		moustique.cpp \
		insectefactory.cpp \
		projectile.cpp \
		gameover.cpp \
		newpartie.cpp moc_mainwindow.cpp \
		moc_myscene.cpp \
		moc_myview.cpp \
		moc_mydockwidget.cpp \
		moc_mycomputer.cpp \
		moc_mybuilder.cpp \
		moc_defense.cpp \
		moc_mypushbutton.cpp \
		moc_insecte.cpp \
		moc_insectefactory.cpp \
		moc_gameover.cpp \
		moc_newpartie.cpp \
		qrc_QRessouces.cpp
OBJECTS       = main.o \
		mainwindow.o \
		myscene.o \
		myview.o \
		mydockwidget.o \
		mycomputer.o \
		mybuilder.o \
		defense.o \
		pistolet_eau.o \
		mypushbutton.o \
		petanque.o \
		paintball.o \
		lance_pierre.o \
		musicien.o \
		insecte.o \
		fourmi.o \
		guepe.o \
		cafard.o \
		moustique.o \
		insectefactory.o \
		projectile.o \
		gameover.o \
		newpartie.o \
		moc_mainwindow.o \
		moc_myscene.o \
		moc_myview.o \
		moc_mydockwidget.o \
		moc_mycomputer.o \
		moc_mybuilder.o \
		moc_defense.o \
		moc_mypushbutton.o \
		moc_insecte.o \
		moc_insectefactory.o \
		moc_gameover.o \
		moc_newpartie.o \
		qrc_QRessouces.o
DIST          = /usr/local/Qt4.7/mkspecs/common/unix.conf \
		/usr/local/Qt4.7/mkspecs/common/mac.conf \
		/usr/local/Qt4.7/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.7/mkspecs/qconfig.pri \
		/usr/local/Qt4.7/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Qt4.7/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.7/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.7/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.7/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.7/mkspecs/features/debug.prf \
		/usr/local/Qt4.7/mkspecs/features/default_post.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.7/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.7/mkspecs/features/qt.prf \
		/usr/local/Qt4.7/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.7/mkspecs/features/moc.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.7/mkspecs/features/resources.prf \
		/usr/local/Qt4.7/mkspecs/features/uic.prf \
		/usr/local/Qt4.7/mkspecs/features/yacc.prf \
		/usr/local/Qt4.7/mkspecs/features/lex.prf \
		/usr/local/Qt4.7/mkspecs/features/include_source_dir.prf \
		TowerDefense.pro
QMAKE_TARGET  = TowerDefense
DESTDIR       = 
TARGET        = TowerDefense.app/Contents/MacOS/TowerDefense

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-g \
		-gdwarf-2 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile TowerDefense.app/Contents/PkgInfo TowerDefense.app/Contents/Resources/empty.lproj TowerDefense.app/Contents/Info.plist $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) TowerDefense.app/Contents/MacOS/ || $(MKDIR) TowerDefense.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: TowerDefense.pro  /usr/local/Qt4.7/mkspecs/macx-g++/qmake.conf /usr/local/Qt4.7/mkspecs/common/unix.conf \
		/usr/local/Qt4.7/mkspecs/common/mac.conf \
		/usr/local/Qt4.7/mkspecs/common/mac-g++.conf \
		/usr/local/Qt4.7/mkspecs/qconfig.pri \
		/usr/local/Qt4.7/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Qt4.7/mkspecs/features/qt_functions.prf \
		/usr/local/Qt4.7/mkspecs/features/qt_config.prf \
		/usr/local/Qt4.7/mkspecs/features/exclusive_builds.prf \
		/usr/local/Qt4.7/mkspecs/features/default_pre.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/default_pre.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/dwarf2.prf \
		/usr/local/Qt4.7/mkspecs/features/debug.prf \
		/usr/local/Qt4.7/mkspecs/features/default_post.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/default_post.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/objective_c.prf \
		/usr/local/Qt4.7/mkspecs/features/warn_on.prf \
		/usr/local/Qt4.7/mkspecs/features/qt.prf \
		/usr/local/Qt4.7/mkspecs/features/unix/thread.prf \
		/usr/local/Qt4.7/mkspecs/features/moc.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/rez.prf \
		/usr/local/Qt4.7/mkspecs/features/mac/sdk.prf \
		/usr/local/Qt4.7/mkspecs/features/resources.prf \
		/usr/local/Qt4.7/mkspecs/features/uic.prf \
		/usr/local/Qt4.7/mkspecs/features/yacc.prf \
		/usr/local/Qt4.7/mkspecs/features/lex.prf \
		/usr/local/Qt4.7/mkspecs/features/include_source_dir.prf \
		/Library/Frameworks/QtGui.framework/QtGui.prl \
		/Library/Frameworks/QtCore.framework/QtCore.prl
	$(QMAKE) -spec /usr/local/Qt4.7/mkspecs/macx-g++ QMLJSDEBUGGER_PATH=/Applications/Qt\ Creator.app/Contents/Resources/qml/qmljsdebugger -o Makefile TowerDefense.pro
/usr/local/Qt4.7/mkspecs/common/unix.conf:
/usr/local/Qt4.7/mkspecs/common/mac.conf:
/usr/local/Qt4.7/mkspecs/common/mac-g++.conf:
/usr/local/Qt4.7/mkspecs/qconfig.pri:
/usr/local/Qt4.7/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Qt4.7/mkspecs/features/qt_functions.prf:
/usr/local/Qt4.7/mkspecs/features/qt_config.prf:
/usr/local/Qt4.7/mkspecs/features/exclusive_builds.prf:
/usr/local/Qt4.7/mkspecs/features/default_pre.prf:
/usr/local/Qt4.7/mkspecs/features/mac/default_pre.prf:
/usr/local/Qt4.7/mkspecs/features/mac/dwarf2.prf:
/usr/local/Qt4.7/mkspecs/features/debug.prf:
/usr/local/Qt4.7/mkspecs/features/default_post.prf:
/usr/local/Qt4.7/mkspecs/features/mac/default_post.prf:
/usr/local/Qt4.7/mkspecs/features/mac/objective_c.prf:
/usr/local/Qt4.7/mkspecs/features/warn_on.prf:
/usr/local/Qt4.7/mkspecs/features/qt.prf:
/usr/local/Qt4.7/mkspecs/features/unix/thread.prf:
/usr/local/Qt4.7/mkspecs/features/moc.prf:
/usr/local/Qt4.7/mkspecs/features/mac/rez.prf:
/usr/local/Qt4.7/mkspecs/features/mac/sdk.prf:
/usr/local/Qt4.7/mkspecs/features/resources.prf:
/usr/local/Qt4.7/mkspecs/features/uic.prf:
/usr/local/Qt4.7/mkspecs/features/yacc.prf:
/usr/local/Qt4.7/mkspecs/features/lex.prf:
/usr/local/Qt4.7/mkspecs/features/include_source_dir.prf:
/Library/Frameworks/QtGui.framework/QtGui.prl:
/Library/Frameworks/QtCore.framework/QtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/local/Qt4.7/mkspecs/macx-g++ QMLJSDEBUGGER_PATH=/Applications/Qt\ Creator.app/Contents/Resources/qml/qmljsdebugger -o Makefile TowerDefense.pro

TowerDefense.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) TowerDefense.app/Contents || $(MKDIR) TowerDefense.app/Contents 
	@$(DEL_FILE) TowerDefense.app/Contents/PkgInfo
	@echo "APPL????" >TowerDefense.app/Contents/PkgInfo
TowerDefense.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) TowerDefense.app/Contents/Resources || $(MKDIR) TowerDefense.app/Contents/Resources 
	@touch TowerDefense.app/Contents/Resources/empty.lproj
	
TowerDefense.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) TowerDefense.app/Contents || $(MKDIR) TowerDefense.app/Contents 
	@$(DEL_FILE) TowerDefense.app/Contents/Info.plist
	@sed -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,TowerDefense,g" -e "s,@TYPEINFO@,????,g" /usr/local/Qt4.7/mkspecs/macx-g++/Info.plist.app >TowerDefense.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/TowerDefense1.0.0 || $(MKDIR) .tmp/TowerDefense1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/TowerDefense1.0.0/ && $(COPY_FILE) --parents mainwindow.h myscene.h myview.h mydockwidget.h mycomputer.h mybuilder.h defense.h pistolet_eau.h mypushbutton.h petanque.h paintball.h lance_pierre.h musicien.h insecte.h fourmi.h guepe.h cafard.h moustique.h insectefactory.h projectile.h gameover.h newpartie.h .tmp/TowerDefense1.0.0/ && $(COPY_FILE) --parents QRessouces.qrc .tmp/TowerDefense1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp myscene.cpp myview.cpp mydockwidget.cpp mycomputer.cpp mybuilder.cpp defense.cpp pistolet_eau.cpp mypushbutton.cpp petanque.cpp paintball.cpp lance_pierre.cpp musicien.cpp insecte.cpp fourmi.cpp guepe.cpp cafard.cpp moustique.cpp insectefactory.cpp projectile.cpp gameover.cpp newpartie.cpp .tmp/TowerDefense1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/TowerDefense1.0.0/ && (cd `dirname .tmp/TowerDefense1.0.0` && $(TAR) TowerDefense1.0.0.tar TowerDefense1.0.0 && $(COMPRESS) TowerDefense1.0.0.tar) && $(MOVE) `dirname .tmp/TowerDefense1.0.0`/TowerDefense1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/TowerDefense1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r TowerDefense.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_mainwindow.cpp moc_myscene.cpp moc_myview.cpp moc_mydockwidget.cpp moc_mycomputer.cpp moc_mybuilder.cpp moc_defense.cpp moc_mypushbutton.cpp moc_insecte.cpp moc_insectefactory.cpp moc_gameover.cpp moc_newpartie.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_myscene.cpp moc_myview.cpp moc_mydockwidget.cpp moc_mycomputer.cpp moc_mybuilder.cpp moc_defense.cpp moc_mypushbutton.cpp moc_insecte.cpp moc_insectefactory.cpp moc_gameover.cpp moc_newpartie.cpp
moc_mainwindow.cpp: gameover.h \
		mainwindow.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ mainwindow.h -o moc_mainwindow.cpp

moc_myscene.cpp: insectefactory.h \
		insecte.h \
		defense.h \
		projectile.h \
		musicien.h \
		myscene.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ myscene.h -o moc_myscene.cpp

moc_myview.cpp: myview.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ myview.h -o moc_myview.cpp

moc_mydockwidget.cpp: mydockwidget.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ mydockwidget.h -o moc_mydockwidget.cpp

moc_mycomputer.cpp: mycomputer.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ mycomputer.h -o moc_mycomputer.cpp

moc_mybuilder.cpp: mybuilder.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ mybuilder.h -o moc_mybuilder.cpp

moc_defense.cpp: defense.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ defense.h -o moc_defense.cpp

moc_mypushbutton.cpp: mypushbutton.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ mypushbutton.h -o moc_mypushbutton.cpp

moc_insecte.cpp: insecte.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ insecte.h -o moc_insecte.cpp

moc_insectefactory.cpp: insectefactory.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ insectefactory.h -o moc_insectefactory.cpp

moc_gameover.cpp: gameover.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ gameover.h -o moc_gameover.cpp

moc_newpartie.cpp: newpartie.h
	/Developer/Tools/Qt/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ newpartie.h -o moc_newpartie.cpp

compiler_rcc_make_all: qrc_QRessouces.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_QRessouces.cpp
qrc_QRessouces.cpp: QRessouces.qrc \
		N_E.jpg \
		E.jpg \
		herbe.jpg \
		S_E.jpg \
		panier.png \
		N_O.jpg \
		N.jpg \
		nord.jpg \
		O.jpg \
		boue.jpg \
		S_O.jpg \
		S.jpg \
		moustique2.png \
		moustique1.png \
		cafard1.png \
		cafard2.png \
		cafard3.png \
		guepe1.png \
		guepe2.png \
		fourmi1.png \
		fourmi2.png \
		fourmi3.png \
		fourmi.mp3 \
		moustique.mp3 \
		cafard.mp3 \
		guepe.mp3 \
		map.txt \
		petanque.png \
		lance-pierre.png \
		musicien.png \
		paintball.png \
		pistolet-eau.png \
		paintball.mp3 \
		pistolet-eau.mp3 \
		lance-pierre.mp3 \
		musicien.mp3 \
		petanque.mp3
	/Developer/Tools/Qt/rcc -name QRessouces QRessouces.qrc -o qrc_QRessouces.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/Developer/Tools/Qt/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		gameover.h \
		newpartie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		gameover.h \
		ui_mainwindow.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		defense.h \
		projectile.h \
		musicien.h \
		myview.h \
		mycomputer.h \
		mydockwidget.h \
		mybuilder.h \
		newpartie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

myscene.o: myscene.cpp myscene.h \
		insectefactory.h \
		insecte.h \
		defense.h \
		projectile.h \
		musicien.h \
		mycomputer.h \
		mainwindow.h \
		gameover.h \
		fourmi.h \
		guepe.h \
		cafard.h \
		moustique.h \
		mydockwidget.h \
		petanque.h \
		paintball.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myscene.o myscene.cpp

myview.o: myview.cpp myview.h \
		mycomputer.h \
		defense.h \
		mainwindow.h \
		gameover.h \
		mydockwidget.h \
		mybuilder.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		musicien.h \
		mypushbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myview.o myview.cpp

mydockwidget.o: mydockwidget.cpp mydockwidget.h \
		mycomputer.h \
		mypushbutton.h \
		mainwindow.h \
		gameover.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		defense.h \
		projectile.h \
		musicien.h \
		myview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mydockwidget.o mydockwidget.cpp

mycomputer.o: mycomputer.cpp mycomputer.h \
		mainwindow.h \
		gameover.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		defense.h \
		projectile.h \
		musicien.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mycomputer.o mycomputer.cpp

mybuilder.o: mybuilder.cpp mybuilder.h \
		pistolet_eau.h \
		defense.h \
		paintball.h \
		petanque.h \
		lance_pierre.h \
		musicien.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		myview.h \
		mycomputer.h \
		mainwindow.h \
		gameover.h \
		mydockwidget.h \
		mypushbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mybuilder.o mybuilder.cpp

defense.o: defense.cpp defense.h \
		insecte.h \
		fourmi.h \
		myscene.h \
		insectefactory.h \
		projectile.h \
		musicien.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o defense.o defense.cpp

pistolet_eau.o: pistolet_eau.cpp pistolet_eau.h \
		defense.h \
		mainwindow.h \
		gameover.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pistolet_eau.o pistolet_eau.cpp

mypushbutton.o: mypushbutton.cpp mypushbutton.h \
		mydockwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mypushbutton.o mypushbutton.cpp

petanque.o: petanque.cpp petanque.h \
		defense.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o petanque.o petanque.cpp

paintball.o: paintball.cpp paintball.h \
		defense.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o paintball.o paintball.cpp

lance_pierre.o: lance_pierre.cpp lance_pierre.h \
		defense.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lance_pierre.o lance_pierre.cpp

musicien.o: musicien.cpp musicien.h \
		defense.h \
		myscene.h \
		insectefactory.h \
		insecte.h \
		projectile.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o musicien.o musicien.cpp

insecte.o: insecte.cpp insecte.h \
		myscene.h \
		insectefactory.h \
		defense.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o insecte.o insecte.cpp

fourmi.o: fourmi.cpp fourmi.h \
		insecte.h \
		myscene.h \
		insectefactory.h \
		defense.h \
		projectile.h \
		musicien.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fourmi.o fourmi.cpp

guepe.o: guepe.cpp guepe.h \
		insecte.h \
		myscene.h \
		insectefactory.h \
		defense.h \
		projectile.h \
		musicien.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o guepe.o guepe.cpp

cafard.o: cafard.cpp cafard.h \
		insecte.h \
		myscene.h \
		insectefactory.h \
		defense.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cafard.o cafard.cpp

moustique.o: moustique.cpp moustique.h \
		insecte.h \
		myscene.h \
		insectefactory.h \
		defense.h \
		projectile.h \
		musicien.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moustique.o moustique.cpp

insectefactory.o: insectefactory.cpp insectefactory.h \
		fourmi.h \
		insecte.h \
		cafard.h \
		guepe.h \
		moustique.h \
		mainwindow.h \
		gameover.h \
		mydockwidget.h \
		myscene.h \
		defense.h \
		projectile.h \
		musicien.h \
		mycomputer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o insectefactory.o insectefactory.cpp

projectile.o: projectile.cpp projectile.h \
		insecte.h \
		defense.h \
		myscene.h \
		insectefactory.h \
		musicien.h \
		petanque.h \
		paintball.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o projectile.o projectile.cpp

gameover.o: gameover.cpp gameover.h \
		mainwindow.h \
		newpartie.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gameover.o gameover.cpp

newpartie.o: newpartie.cpp newpartie.h \
		mainwindow.h \
		gameover.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newpartie.o newpartie.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_myscene.o: moc_myscene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myscene.o moc_myscene.cpp

moc_myview.o: moc_myview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myview.o moc_myview.cpp

moc_mydockwidget.o: moc_mydockwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mydockwidget.o moc_mydockwidget.cpp

moc_mycomputer.o: moc_mycomputer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mycomputer.o moc_mycomputer.cpp

moc_mybuilder.o: moc_mybuilder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mybuilder.o moc_mybuilder.cpp

moc_defense.o: moc_defense.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_defense.o moc_defense.cpp

moc_mypushbutton.o: moc_mypushbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mypushbutton.o moc_mypushbutton.cpp

moc_insecte.o: moc_insecte.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_insecte.o moc_insecte.cpp

moc_insectefactory.o: moc_insectefactory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_insectefactory.o moc_insectefactory.cpp

moc_gameover.o: moc_gameover.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gameover.o moc_gameover.cpp

moc_newpartie.o: moc_newpartie.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_newpartie.o moc_newpartie.cpp

qrc_QRessouces.o: qrc_QRessouces.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_QRessouces.o qrc_QRessouces.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

